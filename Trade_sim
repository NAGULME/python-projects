Trading Simulator
Trading Simulator is a Python-based backtesting framework utilized for testing trading strategies based on historical stock market data. It tests buying and selling conditions based on technical indicators and monitors performance over time.

Main Features
Loads historical data.

Reads a CSV file with stock price information.

Allows user input for file path.

Technical Indicators Employed

Exponential Moving Averages (EMA 10 and EMA 20) serve to measure short-term and medium-term trends.

Volume-Weighted Moving Average (VWMA 20): Follows the price action with respect to volume.

Relative Strength Index (RSI 14): Identifies overbought or oversold levels.

Trading Strategy Regeln

Buy Signal: If EMA 10 moves over VWMA 20 and RSI < 30 (showing there is a likelihood of an up trend).

Sell Signal: When EMA 10 crosses below EMA 20 and RSI > 70 (which is a potential downtrend).

Stop Loss: Close the trade if price drops by 5% from the entry price to prevent losses.

Take Profit: Close the position when price increases by 10% from the entry price.

Simulation Setup

Begins with a capital of $10,000.

There is a $2 fee for each transaction.

Position value dynamically varies with market movement.

Performance Tracking

Logs entry and exit prices, timestamps, profit/loss per trade.

Compiles total trades, net profit/loss, winning & losing trades, profit-loss ratio.

Visualization

Utilizes Candlestick Charts for displaying trading activity.

Plots buy & sell markers along with technical indicators for analysis.

How It Works
Run the script and give the path to the CSV file when prompted.

The program computes indicators and looks for buy/sell signals.

It mimics buying and selling, records all transactions, and reflects the capital balance.

Lastly, the performance data along with a chart is provided.

Advantages
Backtesting trading strategies entails using actual data.

Identifies profitable trade patterns prior to actual execution. Improves risk management by incorporating stop loss and take profit conditions. Assists traders in optimizing strategies based on historical performance.
